/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PuntoVenta.Ventanas;

import PuntoVenta.Modelos.ModeloProducto;
import PuntoVenta.BaseDatos.Producto;
import PuntoVenta.BaseDatos.ObjetoBaseDatos;
import PuntoVenta.Inicio.MenuPrincipal;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;

/**
 *
 * @author Inverdata
 */
public class ModificarProducto2 extends javax.swing.JInternalFrame {

    private Productos productos;
    private ObjetoBaseDatos obd;
    private HashMap<String, Integer> cargos;
    String codigoViejo;
    
    Object panel;
    
    /**
     * Creates new form RegistroEmpleados
     *
     * @param admin
     */
    public ModificarProducto2(Productos productos) {
        this.productos = productos;
        this.obd = productos.menuPrincipal.getOBD();
        this.setTitle("Saphiro - Modificar empleados");
        initComponents();
        txtDescripcionEmpaque.getText();
        txtLimiteVenta.getText();
        txtDescripcionProducto.getText();
        txtCodigo.getText();
        crearHotKeys();
//        setCargos();
    }

    /**
     * Creates new form RegistroEmpleados
     *
     * @param admin Ventana de admin.
     * @param tipo_persona Indicador del combobox. J,V,E,P.
     * @param numero_identificacion_persona Cedula, RIF o n√∫mero de pasaporte de la persona
     */
    public ModificarProducto2(Productos productos, String codigo) {
        this.productos = productos;
        this.obd = productos.menuPrincipal.getOBD();
        initComponents();
        crearHotKeys();
//        setCargos();
        setProducto(codigo);
        codigoViejo = (String)txtCodigo.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContenedor = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblDocumento = new javax.swing.JLabel();
        txtDescripcionEmpaque = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtLimiteVenta = new javax.swing.JTextField();
        txtDescripcionProducto = new javax.swing.JTextField();
        lblApellido = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnModificarProductos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);

        pnlContenedor.setBackground(new java.awt.Color(32, 182, 155));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblDocumento.setBackground(new java.awt.Color(255, 255, 255));
        lblDocumento.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblDocumento.setForeground(new java.awt.Color(28, 90, 125));
        lblDocumento.setText("Codigo:");

        txtDescripcionEmpaque.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDescripcionEmpaque.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(32, 182, 155), 1, true));
        txtDescripcionEmpaque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionEmpaqueActionPerformed(evt);
            }
        });
        txtDescripcionEmpaque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionEmpaqueKeyTyped(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(28, 90, 125));
        lblNombre.setText("Descripcion del Producto:");

        txtLimiteVenta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtLimiteVenta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(32, 182, 155), 1, true));
        txtLimiteVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLimiteVentaActionPerformed(evt);
            }
        });
        txtLimiteVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLimiteVentaKeyTyped(evt);
            }
        });

        txtDescripcionProducto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDescripcionProducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(32, 182, 155), 1, true));
        txtDescripcionProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionProductoKeyTyped(evt);
            }
        });

        lblApellido.setBackground(new java.awt.Color(255, 255, 255));
        lblApellido.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblApellido.setForeground(new java.awt.Color(28, 90, 125));
        lblApellido.setText("Limimte de venta:");

        lblTelefono.setBackground(new java.awt.Color(255, 255, 255));
        lblTelefono.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblTelefono.setForeground(new java.awt.Color(28, 90, 125));
        lblTelefono.setText("Descripcion del Empaque:");

        txtCodigo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtCodigo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(32, 182, 155), 1, true));
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        btnModificarProductos.setBackground(new java.awt.Color(32, 182, 155));
        btnModificarProductos.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnModificarProductos.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarProductos.setText("<html><center>Modificar<br>F2</center></html>");
        btnModificarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnModificarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(80, 80, 80))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblApellido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLimiteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescripcionEmpaque, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocumento)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(txtLimiteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtDescripcionEmpaque, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btnModificarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(28, 90, 125));
        jLabel1.setText("<html><font size=4><center>Obligatorios<br></font></center></html>");

        jLabel2.setBackground(new java.awt.Color(32, 182, 155));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PuntoVenta/Iconos/iconos p_v 24x24/fondo-blanco-400x350.png"))); // NOI18N

        javax.swing.GroupLayout pnlContenedorLayout = new javax.swing.GroupLayout(pnlContenedor);
        pnlContenedor.setLayout(pnlContenedorLayout);
        pnlContenedorLayout.setHorizontalGroup(
            pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContenedorLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenedorLayout.createSequentialGroup()
                    .addContainerGap(27, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(22, 22, 22)))
        );
        pnlContenedorLayout.setVerticalGroup(
            pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
            .addGroup(pnlContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlContenedorLayout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProductosActionPerformed
        modificarProducto();
        productos.actualizarTabla();
    }//GEN-LAST:event_btnModificarProductosActionPerformed

    private void txtDescripcionEmpaqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionEmpaqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionEmpaqueActionPerformed

    private void txtDescripcionEmpaqueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionEmpaqueKeyTyped
        /*

        char c=evt.getKeyChar();

        if(Character.isDigit(c) || evt.getKeyCode()==KeyEvent.VK_ENTER);
        else
        {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Error: Solo se aceptan numeros.");
        }

         */
    }//GEN-LAST:event_txtDescripcionEmpaqueKeyTyped

    private void txtLimiteVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLimiteVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLimiteVentaActionPerformed

    private void txtLimiteVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLimiteVentaKeyTyped
        /*char c=evt.getKeyChar();

        if(Character.isDigit(c))
        {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Error: Solo se aceptan letras.");
        }*/
    }//GEN-LAST:event_txtLimiteVentaKeyTyped

    private void txtDescripcionProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionProductoKeyTyped
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            evt.consume();

        }
    }//GEN-LAST:event_txtDescripcionProductoKeyTyped

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        if ((txtCodigo.getText().length() > 15) || ((!Character.isDigit(evt.getKeyChar()) && (evt.getKeyChar() != '-') && (evt.getKeyChar() != '+')))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void cerrarVentana() {
        this.dispose();
    }
    
    private void crearHotKeys() {
        Action actCerrarVentana = new AbstractAction("actionCerrarVentanaCaja") {
            @Override
            public void actionPerformed(ActionEvent e) {
                cerrarVentana();
            }
        };
        Action actRegistrar = new AbstractAction("actionModificar") {
            @Override
            public void actionPerformed(ActionEvent e) {
//                modificarEmpleado();
            }
        };

        actCerrarVentana.putValue(Action.ACTION_COMMAND_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_Q, ActionEvent.ALT_MASK));
        actRegistrar.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0));

        pnlContenedor.getActionMap().put("actionCerrarVentanaCaja", actCerrarVentana);
        pnlContenedor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put((KeyStroke) actCerrarVentana.getValue(Action.ACTION_COMMAND_KEY), "actionCerrarVentanaCaja");

        pnlContenedor.getActionMap().put("actionModificar", actRegistrar);
        pnlContenedor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put((KeyStroke) actRegistrar.getValue(Action.ACCELERATOR_KEY), "actionModificar");

        InternalFrameAdapter listener = new InternalFrameAdapter() {
            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                try {
//                    admin.getTxtDocumento().requestFocus();
                } catch (Exception E) {
                }
            }
        };

        this.addInternalFrameListener(listener);

    }
    
//    private void setCargos() {
//        cargos = obd.getMapCargos();
//        
//        for (Map.Entry<String, Integer> entry : cargos.entrySet()) {   
////            cmbCargoId.addItem(entry.getKey());
//        }
//    }
    
    private void setProducto(String codigo) {
        txtCodigo.setText(codigo);
        
        Producto productoSeleccionado = obd.getDatosProductoCodigo(codigo);
        
        txtDescripcionProducto.setText(productoSeleccionado.getDescripcionProducto());
        txtLimiteVenta.setText(Integer.toString(productoSeleccionado.getLimiteVenta()));
        txtDescripcionEmpaque.setText(productoSeleccionado.getDescripcionEmpaque());
        
//        for (Map.Entry<String, Integer> entry : cargos.entrySet()) {   
//            if(entry.getValue().toString().equals(empleadoSeleccionado.getCargo_id())) 
////                cmbCargoId.setSelectedItem(entry.getKey());
//        }
    }

    private void modificarProducto() {
        //declaracion y asignacion de variables
        String codigo, descripcionProducto, descripcionEmpaque;
        int limiteVenta;
        boolean idProducto;
        
        codigo = txtCodigo.getText();
        limiteVenta = Integer.parseInt(txtLimiteVenta.getText());
        descripcionEmpaque = (String)txtDescripcionEmpaque.getText();
        descripcionProducto = txtDescripcionProducto.getText();
        
        //Validando que los campos no esten vacios
        if (codigo.isEmpty()) {
            Utilidades.Sonidos.beep();
            txtDescripcionEmpaque.requestFocus();
            return;
        }
        if (descripcionProducto.isEmpty()) {
            Utilidades.Sonidos.beep();
            txtLimiteVenta.requestFocus();
            return;
        }
        if (descripcionEmpaque.isEmpty()) {
            Utilidades.Sonidos.beep();
            txtDescripcionProducto.requestFocus();
            return;
        }
//        if (limiteVenta.isEmpty()) {
//            Utilidades.Sonidos.beep();
//            txtDescripcionEmpaque.requestFocus();
//            return;
//        }

         idProducto = this.obd.actualizarProducto(codigo, descripcionProducto, descripcionEmpaque, limiteVenta, codigoViejo);
//
        if (idProducto == true) {
            this.cerrarVentana();
        } else {
            Utilidades.Sonidos.beep();
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModificarProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblDocumento;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPanel pnlContenedor;
    public static javax.swing.JTextField txtCodigo;
    public static javax.swing.JTextField txtDescripcionEmpaque;
    public static javax.swing.JTextField txtDescripcionProducto;
    public static javax.swing.JTextField txtLimiteVenta;
    // End of variables declaration//GEN-END:variables
}
